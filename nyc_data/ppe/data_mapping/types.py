import json
from abc import abstractmethod, ABCMeta
from enum import Enum
from typing import NamedTupleMeta

from django.core.serializers.json import DjangoJSONEncoder

from ppe.data_mapping.utils import ErrorCollector


class ImportedNamedTuple(ABCMeta, NamedTupleMeta):
    pass


class ImportedRow(metaclass=ImportedNamedTuple):
    """
    Importers convert spreadsheet rows into implementors of this type.
    The key function to define is `to_objects()` which returns a list of database objects
    generated by this database row
    """
    @abstractmethod
    def to_objects(self, error_collector: ErrorCollector):
        pass

    @abstractmethod
    def __repr__(self):
        pass


def repr_no_raw(obj):
    fields = obj._asdict()
    del fields["raw_data"]
    return json.dumps(fields, indent=1, cls=DjangoJSONEncoder)


class DataFile(str, Enum):
    PPE_ORDERINGCHARTS_DATE_XLSX = "edc_ppe_data"
    SUPPLIERS_PARTNERS_XLSX = "edc_suppliers_partners"
    INVENTORY = "inventory"